<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iszhouhua.mapper.JobMapper">
  <insert id="insertBatch" parameterType="java.util.List" >
    INSERT IGNORE INTO `job`(`city`,`job_name`,`url`,`min_salary`,`max_salary`,`education`,`experience`,`address`,`description`,`company_name`,`release_time`,`create_time`)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.city},#{item.jobName},#{item.url},#{item.minSalary},
      #{item.maxSalary},#{item.education},#{item.experience},#{item.address},
      #{item.description},#{item.companyName},#{item.releaseTime},now())
    </foreach>
  </insert>

  <sql id="statJobCondition">
    <where>
      <if test="city!=null and city!=''">
        city=#{city}
      </if>
      <if test="jobName!=null and jobName!=''">
        AND job_name LIKE #{jobName}
      </if>
    </where>
  </sql>

  <update id="updateByIdOrUrl" parameterType="Job">
    UPDATE job
    <set>
      <if test="city != null">city=#{city},</if>
      <if test="jobName != null">job_name=#{jobName},</if>
      <if test="minSalary != null">min_salary=#{minSalary},</if>
      <if test="maxSalary != null">max_salary=#{maxSalary},</if>
      <if test="education != null">education=#{education},</if>
      <if test="address != null">address=#{address},</if>
      <if test="description != null">description=#{description},</if>
      <if test="companyName != null">company_name=#{companyName},</if>
      <if test="createTime != null">create_time=#{createTime},</if>
      <if test="releaseTime != null">release_time=#{releaseTime}</if>
    </set>
    WHERE
    <choose>
      <when test="id != null">
        id=#{id}
      </when>
      <when test="url != null">
        url=#{url}
      </when>
      <otherwise>
        id=0
      </otherwise>
    </choose>
  </update>

  <select id="countJobForExpAndSalary" parameterType="java.util.Map" resultType="Job">
    SELECT floor(AVG(min_salary)) AS minSalary,floor(AVG(max_salary)) AS maxSalary,experience
    FROM `job`
      <include refid="statJobCondition"/>
    GROUP BY experience
  </select>

  <select id="countJobForEducationAndSalary" parameterType="java.util.Map" resultType="Job">
    SELECT  ifnull(floor(AVG(min_salary)),0) AS minSalary,ifnull(floor(AVG(max_salary)),0) AS maxSalary,education
    FROM `job`
      <include refid="statJobCondition"/>
    GROUP BY education
  </select>

  <select id="selectDescriptionByCityAndJobName" parameterType="java.util.Map" resultType="java.lang.String">
    SELECT description FROM `job` where description is not null
    <if test="city!=null and city!=''">
      and city=#{city}
    </if>
    <if test="jobName!=null and jobName!=''">
      AND job_name LIKE #{jobName}
    </if>
  </select>
</mapper>