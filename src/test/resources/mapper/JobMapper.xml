<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhaopin.dao.JobMapper">
  <resultMap id="BaseResultMap" type="com.zhaopin.model.Job">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="min_price" jdbcType="DECIMAL" property="minPrice" />
    <result column="max_price" jdbcType="DECIMAL" property="maxPrice" />
    <result column="welfare" jdbcType="VARCHAR" property="welfare" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="experience" jdbcType="VARCHAR" property="experience" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="company_id" jdbcType="CHAR" property="companyId" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, city, name, url, min_price, max_price, welfare, education, experience, nature, 
    quantity, type, address, description, company_id, release_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from job
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.zhaopin.model.Job">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job (id, city, name, 
      url, min_price, max_price, 
      welfare, education, experience, 
      nature, quantity, type, 
      address, description, company_id, 
      release_time, create_time)
    values (#{id,jdbcType=CHAR}, #{city,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{minPrice,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, 
      #{welfare,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, 
      #{nature,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{companyId,jdbcType=CHAR}, 
      #{releaseTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zhaopin.model.Job">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="city != null">
        city,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="minPrice != null">
        min_price,
      </if>
      <if test="maxPrice != null">
        max_price,
      </if>
      <if test="welfare != null">
        welfare,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=CHAR},
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="minPrice != null">
        #{minPrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null">
        #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="welfare != null">
        #{welfare,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=CHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhaopin.model.Job">
    update job
    <set>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="minPrice != null">
        min_price = #{minPrice,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null">
        max_price = #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="welfare != null">
        welfare = #{welfare,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=CHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhaopin.model.Job">
    update job
    set city = #{city,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      min_price = #{minPrice,jdbcType=DECIMAL},
      max_price = #{maxPrice,jdbcType=DECIMAL},
      welfare = #{welfare,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      nature = #{nature,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=CHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>